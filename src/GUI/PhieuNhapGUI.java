/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import DTO.otherFunction;
import BLL.PhieuNhapBLL;
import DTO.PhieuNhapDTO;
import java.io.File;
import java.io.FileOutputStream;
import java.util.logging.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
public class PhieuNhapGUI extends javax.swing.JFrame {
    PhieuNhapBLL pBLL= new PhieuNhapBLL();
    DefaultTableModel model;
    otherFunction o = new otherFunction();
    public PhieuNhapGUI() {
        initComponents();
        loadPhieuNhapList();
    }
    public void loadPhieuNhapList() {
        model = new DefaultTableModel();
        model.addColumn("Mã Phiếu");
        model.addColumn("Mã Nhân Viên");
        model.addColumn("Ngày Nhập");
        model.addColumn("Tổng số lượng");
        model.addColumn("Tổng Tiền");
        model.addColumn("Nhà Cung Cấp");
        jTable.setModel(model);
        GetMaNV();
        GetMaNCC();
        Vector<PhieuNhapDTO> arr = new Vector<PhieuNhapDTO>();
        arr = pBLL.getAllPhieuNhap();
        for (int i = 0; i < arr.size(); i++) {
            PhieuNhapDTO p = arr.get(i);
            int ma = p.getMaPN();
            String mancc = p.getMaNCC();
            String manv = p.getMaNV();
            Double tongtien = p.getTongTien();
            String ngay = p.getNgayNhap();
            int tongsl = p.getTongSL();
            Object[] row = {ma, manv, ngay,tongsl, tongtien, mancc};
            model.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtmap = new javax.swing.JTextField();
        box = new javax.swing.JComboBox<>();
        box1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtsl = new javax.swing.JTextField();
        txttien = new javax.swing.JTextField();
        ngay = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        them = new javax.swing.JButton();
        xoa = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        tim = new javax.swing.JButton();
        in = new javax.swing.JButton();
        export = new javax.swing.JButton();
        chitiet = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÝ PHIẾU NHẬP HÀNG");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ PHIẾU NHẬP HÀNG");

        jLabel5.setText("Mã Nhân Viên");

        jLabel6.setText("Mã Nhà Cung Cấp");

        jLabel7.setText("Mã Phiếu");

        box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        box1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Tổng Số Lượng");

        jLabel9.setText("Tổng Tiền");

        jLabel10.setText("Ngày Nhập");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DANH SÁCH PHIẾU NHẬP ");

        them.setBackground(new java.awt.Color(153, 255, 255));
        them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/them.png"))); // NOI18N
        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        xoa.setBackground(new java.awt.Color(153, 255, 255));
        xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/xoa.png"))); // NOI18N
        xoa.setText("Xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });

        sua.setBackground(new java.awt.Color(153, 255, 255));
        sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sua.png"))); // NOI18N
        sua.setText("Sửa");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(153, 255, 255));
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clear.png"))); // NOI18N
        clear.setText("Làm mới");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        tim.setBackground(new java.awt.Color(153, 255, 255));
        tim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tim.png"))); // NOI18N
        tim.setText("Tìm");
        tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timActionPerformed(evt);
            }
        });

        in.setBackground(new java.awt.Color(153, 255, 255));
        in.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/in.png"))); // NOI18N
        in.setText("In");
        in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inActionPerformed(evt);
            }
        });

        export.setBackground(new java.awt.Color(153, 255, 255));
        export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/xuat.png"))); // NOI18N
        export.setText("Export");
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });

        chitiet.setBackground(new java.awt.Color(153, 255, 255));
        chitiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chitiet.png"))); // NOI18N
        chitiet.setText("Chi tiết");
        chitiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chitietActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(them, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(xoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(in, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmap, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtsl, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txttien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ngay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 61, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(export, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(sua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clear)
                                    .addComponent(chitiet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31))))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(box, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txttien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(box1)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(ngay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sua, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tim, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(in, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(export, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chitiet, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        int i = jTable.getSelectedRow();
        if (i >= 0) {
            Vector<PhieuNhapDTO> arr = new Vector<PhieuNhapDTO>();
            arr = pBLL.getAllPhieuNhap();
            PhieuNhapDTO d = arr.get(i);
            txtmap.setText(String.valueOf(d.getMaPN()));
            txtmap.setEnabled(false);
            box1.setSelectedItem(String.valueOf(jTable.getValueAt(i, 1)));
            box.setSelectedItem(String.valueOf(jTable.getValueAt(i, 5)));
            txttien.setText(String.valueOf(d.getTongTien()));
            txtsl.setText(String.valueOf(d.getTongSL()));
            try {
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(i,2));
                ngay.setDate(date);
                
            } catch (ParseException ex) {
                Logger.getLogger(PhieuNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTableMouseClicked

    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        
        try {
            SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
        
            if (txtmap.getText().trim().equals("") || d.format(ngay.getDate()).trim().equals("") || txttien.getText().trim().equals("")|| txtsl.getText().trim().equals("")) 
            {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin");
            } 
            else
            {
                String date = d.format(ngay.getDate());
                PhieuNhapDTO dh = new PhieuNhapDTO();
                dh.setMaPN(Integer.parseInt(txtmap.getText()));
                dh.setMaNV(String.valueOf(box.getSelectedItem()));
                dh.setMaNCC(String.valueOf(box1.getSelectedItem()));                
                dh.setNgayNhap(date);
                if(o.checknumber(txtsl.getText())){
                    dh.setTongSL(Integer.parseInt(txtsl.getText()));
                }
               
                dh.setTongTien(Double.parseDouble(txttien.getText()));
                
                JOptionPane.showMessageDialog(this, pBLL.themPhieuNhap(dh));
                loadPhieuNhapList();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Thông tin không hợp lệ");
        }
    }//GEN-LAST:event_themActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        txtmap.setEnabled(true);
        txtmap.setText("");
        txttien.setText("");
        ngay.setDate(null);
        txtsl.setText("");
        loadPhieuNhapList();
    }//GEN-LAST:event_clearActionPerformed

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        try{
            int index = jTable.getSelectedRow();
            if (index < 0) {
                JOptionPane.showMessageDialog(null, "Chưa chọn hàng nào để xóa");
                return;
            }
            String id = String.valueOf(jTable.getValueAt(index, 0));
            int ma =Integer.parseInt(id);
            JOptionPane.showMessageDialog(this, pBLL.xoaPhieuNhap(ma));
            loadPhieuNhapList();
            txtmap.setEnabled(true);
            txtmap.setText("");
            txttien.setText("");
            ngay.setDate(null);
            txtsl.setText("");
            
        }catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Mã Sách không hợp lệ");
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
        try {
            int masua;
            SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
            String date = d.format(ngay.getDate());
            if (txtmap.getText().trim().equals("") 
                    || txttien.getText().trim().equals("") 
                    || date.trim().equals("") ) 
            {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu");
            } else {
                PhieuNhapDTO dh = new PhieuNhapDTO();
                dh.setMaPN(Integer.parseInt(txtmap.getText()));
                dh.setMaNV(String.valueOf(box.getSelectedItem()));
                dh.setMaNCC(String.valueOf(box1.getSelectedItem()));                
                dh.setNgayNhap(date);
                if(o.checknumber(txtsl.getText())){
                    dh.setTongSL(Integer.parseInt(txtsl.getText()));
                }
                dh.setTongTien(Double.parseDouble(txttien.getText()));
                JOptionPane.showMessageDialog(this, pBLL.suaPhieuNhap(dh));
                loadPhieuNhapList();

            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Thông tin không hợp lệ");
        }
    }//GEN-LAST:event_suaActionPerformed

    private void timActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timActionPerformed
    String mastr = JOptionPane.showInputDialog("Nhập mã phiếu cần tim:");
    int ma = Integer.parseInt(mastr);
    Vector<PhieuNhapDTO> arr = null;
    if (pBLL.Tim(ma)) {
        arr = pBLL.timPhieuNhap(ma);
        model = new DefaultTableModel();
        model.addColumn("Mã Phiếu");
        model.addColumn("Mã Nhân Viên");
        model.addColumn("Ngày Nhập");
        model.addColumn("Tổng số lượng");
        model.addColumn("Tổng Tiền");
        model.addColumn("Nhà Cung Cấp");
        jTable.setModel(model);
        for (int i = 0; i < arr.size(); i++) {
            PhieuNhapDTO p = arr.get(i);
            String mancc = p.getMaNCC();
            String manv = p.getMaNV();
            Double tongtien = p.getTongTien();
            String ngaynhap = p.getNgayNhap();
            int tongsl = p.getTongSL();
            Object[] row = {ma, manv, ngaynhap,tongsl, tongtien, mancc};
            model.addRow(row);
            txtmap.setText(mastr);
            txtmap.setEnabled(false);
            box1.setSelectedItem(manv);
            box.setSelectedItem(mancc);
            txttien.setText(String.valueOf(tongtien));
            txtsl.setText(String.valueOf(tongsl));
            try{
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(ngaynhap);
                ngay.setDate(date);
            } catch (ParseException ex) {
                Logger.getLogger(PhieuNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    else
    {
        JOptionPane.showMessageDialog(this, "Không tồn tại Mã Phiếu này");
        loadPhieuNhapList();
     }
    }//GEN-LAST:event_timActionPerformed

    private void inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inActionPerformed
        try {
            boolean print = jTable.print();
            if(!print)
            {
                JOptionPane.showMessageDialog(this, "In thất bại");
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "In thất bại");
        }
    }//GEN-LAST:event_inActionPerformed

    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        try {
        //tạo một đối tượng của lớp HSSFWorkbook
        HSSFWorkbook workbook = new HSSFWorkbook();
        //gọi phương thức creatSheet() và truyền tên file muốn tạo
        HSSFSheet sheet = workbook.createSheet("Phiếu Đặt Hàng");
        //tạo hàng thứ 0 sử dụng phương thức createRow()
        HSSFRow rowhead = sheet.createRow((short) 0);
        //tạo ô bằng cách sử dụng phương thức createCell()
        //và thiết lập giá trị cho ô bằng cách sử dụng phương thức setCellValue()
        rowhead.createCell(0).setCellValue("Mã Phiếu");
        rowhead.createCell(1).setCellValue("Mã Nhân Viên");
        rowhead.createCell(2).setCellValue("Ngay Nhập");
        rowhead.createCell(3).setCellValue("Tổng Số lượng");
        rowhead.createCell(4).setCellValue("Tổng Tiền");
         rowhead.createCell(5).setCellValue("Mã Nhà Cung Cấp");
        Vector<PhieuNhapDTO> arr = new Vector<PhieuNhapDTO>();
        arr = pBLL.getAllPhieuNhap();
        for (int i = 0; i < arr.size(); i++) {
            PhieuNhapDTO p = arr.get(i);
            int maph = p.getMaPN();
            String mancc = p.getMaNCC();
            String manv = p.getMaNV();
            Double tongtien = p.getTongTien();
            String ngaynhap = p.getNgayNhap();
            int tongsl = p.getTongSL();
            HSSFRow row = sheet.createRow((short) i+1);
            row.createCell(0).setCellValue(maph);
            row.createCell(1).setCellValue(manv);
            row.createCell(2).setCellValue(ngaynhap);
            row.createCell(3).setCellValue(tongsl); 
            row.createCell(4).setCellValue(tongtien);
            row.createCell(5).setCellValue(mancc);
        }         
        JFileChooser chooser = new JFileChooser();
        String filename = "";        
        int i = chooser.showSaveDialog(chooser);
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
        try{
     
             filename = file + ".xls";
        } catch (Exception e2) {
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!"); }
        }
   
        FileOutputStream fileOut = new FileOutputStream(filename);
        workbook.write(fileOut);
        //đóng stream
        fileOut.close();
        //đóng workbook
        workbook.close();
        //in thông báo tạo thành công
        JOptionPane.showMessageDialog(this, "File Excel đã được tạo thành công.");
    } catch (Exception e) {
      e.printStackTrace();}
    }//GEN-LAST:event_exportActionPerformed

    private void chitietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chitietActionPerformed
        CT_PhieuNhapGUI ct = new CT_PhieuNhapGUI();
        ct.load(Integer.parseInt(txtmap.getText()));
        ct.setVisible(true);
    }//GEN-LAST:event_chitietActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhieuNhapGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> box;
    private javax.swing.JComboBox<String> box1;
    private javax.swing.JButton chitiet;
    private javax.swing.JButton clear;
    private javax.swing.JButton export;
    private javax.swing.JButton in;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private com.toedter.calendar.JDateChooser ngay;
    private javax.swing.JButton sua;
    private javax.swing.JButton them;
    private javax.swing.JButton tim;
    private javax.swing.JTextField txtmap;
    private javax.swing.JTextField txtsl;
    private javax.swing.JTextField txttien;
    private javax.swing.JButton xoa;
    // End of variables declaration//GEN-END:variables
 private void GetMaNV() {
        box.removeAllItems();
        Vector<String> str = pBLL.getAllMaNV();
        for (int i=0; i< str.size(); i++) {
            box.addItem(str.get(i));
        }
    }
    private void GetMaNCC() {
        box1.removeAllItems();
        Vector<String> str = pBLL.getAllMaNCC();
        for (int i=0; i< str.size(); i++) {
            box1.addItem(str.get(i));
        }
    }
}
